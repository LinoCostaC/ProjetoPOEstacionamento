/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frontend;

import BaseDeDados.Serializacao;
import backend.Administrador;
import backend.Aplicacao;
import backend.ListaParque;
import backend.Parque;
import backend.Seguranca;
import backend.Utente;
import backend.Viatura;
import javax.swing.JOptionPane;

/**
 *
 * @author LC
 */
public class Login extends javax.swing.JFrame {

    private Aplicacao aplicacao;
    private Serializacao database;
    
     
     public Login() {
        initComponents();
        this.aplicacao = aplicacao;
         this.database=database;
         //Para manter o dimensionamento da janela
         this.setResizable(false);
         //Mostrar a janela centralizada
         this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        
        private void autenticar() {
        if (txtUsername.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Introduza o username!");
            txtUsername.requestFocus();
            return;
        }

        if (pfPassword.getPassword().length == 0) {
            JOptionPane.showMessageDialog(this, "Introduza  a password!");
            pfPassword.requestFocus();
            return;
        }

        if (!aplicacao.autenticarUser(txtUsername.getText(), new String(pfPassword.getPassword()))) {
            JOptionPane.showMessageDialog(this, "Dados inválidos.",
                    "Autenticação", JOptionPane.WARNING_MESSAGE);
            txtUsername.requestFocus();
        } else {
            //Devolve o controlo da aplicação para o método main
            dispose();
            
            //Mostra a página se o utilizador for um Admin
            if (aplicacao.getUtilizadorLigado() instanceof Administrador) {
                PaginaInicialAdmin pia = new PaginaInicialAdmin(aplicacao, database);
                pia.setLocationRelativeTo(null);
                pia.setVisible(true);
            } else {

                //Mostra a página se o utilizador for um Seguranca
                if (aplicacao.getUtilizadorLigado() instanceof Seguranca) {
                    try {
                        Parque parque = aplicacao.getListaParque();
                        PaginaInicialSeguranca pis = new PaginaInicialSeguranca(aplicacao,parque, database);
                        pis.setLocationRelativeTo(null);
                        pis.setVisible(true);
                    } catch (Exception e) {
                        Parque parque = null;
                        PaginaInicialSeguranca pis = new PaginaInicialSeguranca(aplicacao,parque, database);
                        pis.setLocationRelativeTo(null);
                        pis.setVisible(true);
                    }
                } else {
                    //Mostra a página se o utilizador for um User normal (Utente)
                    if (aplicacao.getUtilizadorLigado()instanceof Utente) {
                        Utente u = (Utente) aplicacao.getUtilizadorLigado();
                        Viatura viatura = u.getViaturaUtente();
                        PaginaInicialUser piu = new PaginaInicialUser(aplicacao,viatura, database);
                        piu.setLocationRelativeTo(null);
                        piu.setVisible(true);
                    }
                }

            }
        }
    }
    
     
     private void terminar() {
        if (JOptionPane.showConfirmDialog(null,
                "Tem a certeza que pretende terminar o programa?",
                "Terminar",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            aplicacao.terminar();
        }
    }
     
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtUsername = new javax.swing.JTextField();
        jlUsername = new javax.swing.JLabel();
        jlPassword = new javax.swing.JLabel();
        cbMostrarPassword = new javax.swing.JCheckBox();
        jlLogin = new javax.swing.JLabel();
        jbEntrar = new javax.swing.JButton();
        jbSair = new javax.swing.JButton();
        jbRegistar = new javax.swing.JButton();
        pfPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlUsername.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlUsername.setText("Username");

        jlPassword.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlPassword.setText("Password");

        cbMostrarPassword.setText("Mostrar Password");
        cbMostrarPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMostrarPasswordActionPerformed(evt);
            }
        });

        jlLogin.setFont(new java.awt.Font("Dubai", 0, 48)); // NOI18N
        jlLogin.setText("LOGIN");

        jbEntrar.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        jbEntrar.setText("Entrar");

        jbSair.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        jbSair.setText("Sair");
        jbSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSairActionPerformed(evt);
            }
        });

        jbRegistar.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        jbRegistar.setText("Registar");
        jbRegistar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRegistarActionPerformed(evt);
            }
        });

        pfPassword.setText("jPasswordField1");
        pfPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pfPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbMostrarPassword)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(128, 128, 128)
                                .addComponent(jbSair, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jlUsername)
                                    .addComponent(jlPassword))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtUsername)
                                    .addComponent(pfPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbRegistar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                            .addComponent(jbEntrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(119, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbSair, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlUsername))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlPassword)
                    .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbMostrarPassword)
                .addGap(18, 18, 18)
                .addComponent(jbEntrar)
                .addGap(18, 18, 18)
                .addComponent(jbRegistar)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbMostrarPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMostrarPasswordActionPerformed
        if (cbMostrarPassword.isSelected()) {
            pfPassword.setEchoChar((char) 0);
        } else {
            pfPassword.setEchoChar('•');
        } 
    }//GEN-LAST:event_cbMostrarPasswordActionPerformed

    private void jbRegistarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRegistarActionPerformed
    
    }//GEN-LAST:event_jbRegistarActionPerformed

    private void pfPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pfPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pfPasswordActionPerformed

    private void jbSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSairActionPerformed
        terminar();
    }//GEN-LAST:event_jbSairActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbMostrarPassword;
    private javax.swing.JButton jbEntrar;
    private javax.swing.JButton jbRegistar;
    private javax.swing.JButton jbSair;
    private javax.swing.JLabel jlLogin;
    private javax.swing.JLabel jlPassword;
    private javax.swing.JLabel jlUsername;
    private javax.swing.JPasswordField pfPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
